/-
Copyright (c) 2022 Jireh Loreaux. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Jireh Loreaux
-/
import algebra.star.subalgebra
import topology.algebra.algebra
import topology.algebra.star
import topology.algebra.prereqs

/-!
# Topological star (sub)algebras

A topological star algebra over a topological semiring `R` is a topological semiring with a
compatible continuous scalar multiplication by elements of `R` and a continuous star operation.
We reuse typeclass `has_continuous_smul` for topological algebras.

## Results

This is just a minimal stub for now!

The topological closure of a star subalgebra is still a star subalgebra,
which as a star algebra is a topological star algebra.
-/

open classical set topological_space algebra
open_locale classical

universes u v w

section topological_star_algebra
variables {R : Type*} [comm_semiring R] [star_ring R]
variables {A : Type u} [topological_space A]
variables [semiring A] [algebra R A] [star_ring A] [star_module R A]

instance star_subalgebra.has_continuous_smul [topological_space R] [has_continuous_smul R A]
  (s : star_subalgebra R A) :
  has_continuous_smul R s :=
s.to_subalgebra.has_continuous_smul

variables [topological_semiring A] [has_continuous_star A]

/-- The closure of a star subalgebra in a topological star algebra as a star subalgebra. -/
def star_subalgebra.topological_closure (s : star_subalgebra R A) :
  star_subalgebra R A :=
{ carrier := closure (s : set A),
  star_mem' := λ a ha, map_mem_closure continuous_star ha (λ x, (star_mem : x ∈ s → star x ∈ s)),
  .. s.to_subalgebra.topological_closure }

@[simp] lemma star_subalgebra.topological_closure_coe (s : star_subalgebra R A) :
  (s.topological_closure : set A) = closure (s : set A) :=
rfl

instance star_subalgebra.topological_semiring (s : star_subalgebra R A) : topological_semiring s :=
s.to_subalgebra.topological_semiring

lemma star_subalgebra.le_topological_closure (s : star_subalgebra R A) :
  s ≤ s.topological_closure :=
subset_closure

lemma star_subalgebra.is_closed_topological_closure (s : star_subalgebra R A) :
  is_closed (s.topological_closure : set A) :=
by convert is_closed_closure

lemma star_subalgebra.topological_closure_minimal
  (s : subalgebra R A) {t : subalgebra R A} (h : s ≤ t) (ht : is_closed (t : set A)) :
  s.topological_closure ≤ t :=
closure_minimal h ht

/-- If a star subalgebra of a topological star algebra is commutative, then so is its topological
closure. -/
def star_subalgebra.comm_semiring_topological_closure [t2_space A] (s : star_subalgebra R A)
  (hs : ∀ (x y : s), x * y = y * x) : comm_semiring s.topological_closure :=
s.to_subalgebra.comm_semiring_topological_closure hs

end topological_star_algebra

section ring
variables {R : Type*} [comm_ring R] [star_ring R]
variables {A : Type u} [topological_space A]
variables [ring A] [star_ring A]
variables [topological_ring A] [has_continuous_star A]
variables [algebra R A] [star_module R A]

/-- If a star subalgebra of a topological star algebra is commutative, then so is its topological
closure.
See note [reducible non-instances]. -/
@[reducible] def star_subalgebra.comm_ring_topological_closure [t2_space A]
  (s : star_subalgebra R A) (hs : ∀ (x y : s), x * y = y * x) : comm_ring s.topological_closure :=
s.to_subalgebra.comm_ring_topological_closure hs

variables (R)

/-- The topological closure of the subalgebra generated by a single element. -/
def star_subalgebra.elemental_algebra (x : A) : star_subalgebra R A :=
(star_subalgebra.adjoin R ({x} : set A)).topological_closure

lemma star_subalgebra.self_mem_elemental_algebra (x : A) :
  x ∈ star_subalgebra.elemental_algebra R x :=
set_like.le_def.mp (star_subalgebra.le_topological_closure _)
  (star_subalgebra.self_mem_adjoin_singleton R x)

lemma star_subalgebra.star_self_mem_elemental_algebra (x : A) :
  star x ∈ star_subalgebra.elemental_algebra R x :=
star_mem $ star_subalgebra.self_mem_elemental_algebra R x

instance [t2_space A] {x : A} [is_star_normal x] :
  comm_ring (star_subalgebra.elemental_algebra R x) :=
star_subalgebra.comm_ring_topological_closure _ mul_comm

end ring
